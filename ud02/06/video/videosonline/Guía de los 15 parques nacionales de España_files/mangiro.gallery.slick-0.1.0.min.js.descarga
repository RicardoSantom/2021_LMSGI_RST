// Define MgrSlickGallery plugin
// require: slick, jquery, lazysizes, aspectratio, load_ads, jquery.appear, mangiro, mangiro_social, cookie
// require: mgrslick.config.js
(function (factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        define(['jquery'], factory);
    } else if (typeof exports !== 'undefined') {
        module.exports = factory(require('jquery'));
    } else {
        factory(jQuery);
    }

}(function ($) {
    'use strict';    

    var MGRSlick = window.MGRSlick || {};    

    MGRSlick = (function () {

        function MGRSlick(element, start, gallerySupport, mangiroUtils) {
            var that = this,
                settings = $.extend(true, {}, that.getSettings(start, gallerySupport, mangiroUtils)),
                slider = $(element);            

            var unslickBp = that.getUnslickedBreakpoint(settings);
            if ($(window).width() >= unslickBp) {
                that.initEvents(slider, settings);
                that.initSlider(slider, settings);
                that.initButtons(slider, settings);
            }
            else {
                that.initUnslicked(slider, settings);
            }
        }

        return MGRSlick;

    }());

    MGRSlick.prototype.getSettings = function (start, gallerySupport, mangiroUtils) {
        if (typeof slickSettings === 'undefined') {
            //default settings
            slickSettings = { dots: false, infinite: false, responsive: [{ breakpoint: 989, settings: 'unslick' }], adsToRefresh: ['robatop_resto', 'roba_galeria', 'robainf_resto'], breakOnSkin: false };
        }
        if (typeof start !== "undefined" && start === parseInt(start))
            slickSettings.initialSlide = start;
        if (typeof gallerySupport !== "undefined")
            slickSettings.gallerySupport = gallerySupport;

        if (typeof mangiroUtils !== "undefined")
            slickSettings.mangiroUtils = mangiroUtils;
        return slickSettings;
    }

    MGRSlick.prototype.getUnslickedBreakpoint = function (settings) {
        var unslickedBreakpoints = settings.responsive.filter(function (obj) {
            return obj.settings === "unslick";
        });
        if (unslickedBreakpoints.length > 0) {
            return Math.max.apply(Math, unslickedBreakpoints.map(function (o) {
                return o.breakpoint
            }));
        } else {
            return 0
        }
    }

    MGRSlick.prototype.initSlider = function (slider, settings) {
        var _ = this;

        slider.slick(settings);

        //Check skinner
        if (settings.breakOnSkin) {
            if ($('body').hasClass("skinner")) {
                destroySlider(slider);
            } else {
                $(window).on('skindetected', function () {
                    destroySlider(slider);
                });
            }
        }

        //Check cookie
        var cookie = slickSettings.mangiroUtils.getCookie("gallery");
        if (cookie != null && cookie == "unslick") {
            destroySlider(slider);
        }
        
    };

    MGRSlick.prototype.initEvents = function (slider, settings) {
        var _ = this,
            selector = "." + slider.attr('class');

        slider.on('destroy', function (event, slick) {
            slider.addClass("unslicked");
            $(".fgs-navigation").hide();
            activeAppear(selector + '.unslicked .slide');
            var index = getActualPageIndex();
            if (index > 0) {
                jumpToIndex(index);
            }
            $(window).resize(function () {
                checkToReInit(slider, settings);
            });
        });

        slider.on('afterChange', function (event, slick, currentSlide) {
            slickSettings.gallerySupport.updateGalleryPage(currentSlide, settings.adsToRefresh, false, [], selector, '', false);
            $(".fgs-actual-slide").html(currentSlide + 1);
            _dispatchChangeSlideEvent(currentSlide);
        });
    };

    MGRSlick.prototype.initButtons = function (slider, settings) {
        var _ = this,
            selector = "." + slider.attr('class');

        // Desktop buttons
        $(".fgs-options .fgs-mode-slider").on('click', function () {
            slickSettings.mangiroUtils.setCookie("gallery", "slick", 365);
            checkToReInit(slider, settings);
        });
        $(".fgs-options .fgs-mode-unfolder").on('click', function () {
            $(".fgs-options").children().removeClass("active");
            $(this).addClass("active");
            slickSettings.mangiroUtils.setCookie("gallery", "unslick", 365);
            destroySlider(slider);
        });
        //Check button active:
        if (slider.hasClass("unslicked")) {
            $(".fgs-options .fgs-mode-unfolder").addClass("active");
            $(".fgs-navigation").hide();
        } else {
            $(".fgs-options .fgs-mode-slider").addClass("active");
            $(".fgs-navigation").show();
        }

        //Navigate buttons
        $(".fgs-navigation .fgs-next").on('click', function () {
            slider.slick('slickNext');
        });
        $(".fgs-navigation .fgs-prev").on('click', function () {
            slider.slick('slickPrev');
        });
    };

    MGRSlick.prototype.initUnslicked = function (slider, settings) {
        var selector = "." + slider.attr('class');
        slider.addClass("unslicked");
        $(".fgs-navigation").hide();
        activeAppear(selector + '.unslicked .slide');
        var index = getActualPageIndex();
        if (index > 0)
            jumpToIndex(index);
    };

    /* Private functions */
    function _dispatchChangeSlideEvent(newIndex) {
        // throw general change event
        var ce = new CustomEvent("mgr-gallery-change-slide", { "detail": newIndex });
        document.dispatchEvent(ce);
        log("Mangiro > Gallery > Slick > Launch of changing slide to... " + newIndex);
    };

    function activeAppear(selector) {
        $(selector).appear();
        $(document.body).on('appear', selector, function (event, affected) {
            if (isIntoView(this)) {
                var indexSlide = getIndexSlide(this);
                if (getActualPageIndex() != indexSlide) {
                    slickSettings.gallerySupport.updateGalleryPage(indexSlide, [], false, [], selector, '', false);
                    _dispatchChangeSlideEvent(indexSlide);
                }
            }
        });
    }
    function isIntoView(element) {
        var viewPos = Math.round($(window).height() * 0.3);
        var scrollView = $(window).scrollTop() + viewPos;
        var topElement = $(element).offset().top;
        var bottomElement = $(element).height() + topElement;
        return ((topElement <= scrollView) && (bottomElement > scrollView));
    }

    function getIndexSlide(slide) {
        return (parseInt($(slide).attr("data-slide")));
    }

    function getActualPageIndex() {
        var pagIndex = 0;
        var urlStart = window.location.pathname.lastIndexOf("/") + 1;
        var urlLength = window.location.pathname.length;
        if (urlStart <= urlLength) {
            var number = window.location.pathname.substring(urlStart, urlLength);
            if (!isNaN(number))
                pagIndex = parseInt(number) - 1;
        }
        return pagIndex;
    }

    function scrollToElement(element, fromTop, header) {
        if (typeof element !== "undefined") {
            if (typeof header === "undefined")
                header = ".sticky .menu";
            var hSticky = 0;
            if ($(header).length)
                hSticky = $(header).height();
            if (!fromTop)
                $('html,body').animate({ scrollTop: (element.offset().top - 200) }, 1000);
            else
                $('html,body').animate({ scrollTop: (element.offset().top - hSticky) }, 1000);            
        }
    }
    
    function checkToReInit(slider, settings) {
        var bp = 989; //default breakpoint
        if (typeof settings.responsive[0].breakpoint !== "undefined")
            bp = settings.responsive[0].breakpoint;

        if (slider.hasClass("unslicked") && ($(window).width() > bp) && (!settings.breakOnSkin || (settings.breakOnSkin && !$('body').hasClass("skinner")))) {
            var cookie = settings.mangiroUtils.getCookie("gallery");
            if (cookie == null || (cookie != null && cookie == "slick")) {
                reinitSlider(slider, settings);
            }
        }
    }

    function reinitSlider(slider, settings) {
        slider.removeClass("unslicked");
        settings.initialSlide = getActualPageIndex();
        slider.slick(settings);
        $(".fgs-options").children().removeClass("active");
        $(".fgs-options .fgs-mode-slider").addClass("active");
        $(".fgs-navigation").show();
        $(".fgs-actual-slide").html((settings.initialSlide + 1));
        settings.mangiroUtils.setCookie("gallery", "slick", 365);
        scrollToElement(slider.parent(), true, settings.stickyClass);
    }

    function destroySlider(slider) {
        if (!slider.hasClass("unslicked")) {
            slider.slick('unslick');
        }
    }

    function jumpToIndex(index) {
        var url = window.location + "#slide-" + index;
        window.location.replace(url);
    }

    /* End Private functions */

    $.fn.mgrslick = function () {
        var _ = this,
            arg1 = arguments[0],
			arg2 = arguments[1],
            arg3 = arguments[2],
            l = _.length,
            i;
        for (i = 0; i < l; i++) {
            if (typeof opt == 'object' || typeof opt == 'undefined')
                _[i].mgrslick = new MGRSlick(_[i], arg1, arg2, arg3);
        }

        return _;
    };

}));